/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2020-02-17 11:37:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class inquire_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("<title>외웟</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("#content {\r\n");
      out.write("\tpadding-top: 50px;\r\n");
      out.write("\tpadding-left: 50px;\r\n");
      out.write("\tpadding-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/menubar.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/left-menubar.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<form>\r\n");
      out.write("\t\t<div id=\"content\" class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-10\">\r\n");
      out.write("\t\t\t\t<div class=\"box box-info\">\r\n");
      out.write("\t\t\t\t\t<div class=\"box-body\">\r\n");
      out.write("\t\t\t\t\t\t<fieldset id=\"w4\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group field-job-tipe\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"job-tipe\" class=\"control-label col-md-2\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-weight: bold\">유형</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select name=\"Job[tipe]\" class=\"form-control\" id=\"job-tipe\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"0\">계정</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">시스템</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">사용자</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">기타</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-offset-2 col-md-10\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-offset-2 col-md-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"help-block\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group field-job-title required\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"job-title\" class=\"control-label col-md-2\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-weight: bold\">제목</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" autocomplete=\"off\" placeholder=\"제목을 입력하세요\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname=\"input\" class=\"form-control\" id=\"input-title\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-offset-2 col-md-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"hint-block\" style=\"font-size: 12px\">제목은 변경할\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t수 없습니다</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-offset-2 col-md-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"help-block\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"job-desc\" class=\"control-label col-md-3\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-weight: bold\">문의 내용</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div id=\"summernote\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-offset-2 col-md-10\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-offset-2 col-md-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"help-block\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\t$(\"#summernote\")\r\n");
      out.write("\t\t\t\t\t\t.summernote(\r\n");
      out.write("\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\"height\" : 400,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\"width\" : \"1200px\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\"dialogsInBody\" : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\"prettifyHtml\" : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\"codemirror\" : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\"mode\" : \"text/html\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\"htmlMode\" : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\"lineNumbers\" : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\"theme\" : \"monokai\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\"width\" : \"100px\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\"textWrapping\" : true\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\"disableDragAndDrop\" : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\"toolbar\" : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t[ \"paragraph\", [ \"style\" ] ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t[\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\"fontsize\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ \"fontname\", \"fontsize\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\" ] ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t[\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\"style\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ \"bold\", \"italic\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"underline\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strikethrough\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"clear\" ] ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t[ \"paragraph\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ \"ol\", \"ul\", \"paragraph\" ] ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t[\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\"insert\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ \"table\", \"link\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"picture\", \"video\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"hr\" ] ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t[ \"misc\", [ \"codeview\" ] ] ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\"placeholder\" : \"문의 내용을 입력하세요\"\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<button type=\"button\" class=\"btn btn-outline-success\" style=\"position: absolute; margin-left: 580px;\">Success</button>\r\n");
      out.write("\t\t<button type=\"button\" class=\"btn btn-outline-danger\" style=\"position: absolute; margin-left: 700px;\">Danger</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
